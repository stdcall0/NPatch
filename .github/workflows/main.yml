name: Android CI

on:
  push:
    branches: [ master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: '%compiler% -dumpmachine; %compiler% -dumpversion'
      CCACHE_NOHASHDIR: 'true'
      CCACHE_HARDLINK: 'true'
      CCACHE_BASEDIR: '${{ github.workspace }}'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0

    - name: Write key
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
      run: |
        if [ ! -z "${{ secrets.KEY_STORE }}" ]; then
          echo androidStorePassword='${{ secrets.KEY_STORE_PASSWORD }}' >> gradle.properties
          echo androidKeyAlias='${{ secrets.ALIAS }}' >> gradle.properties
          echo androidKeyPassword='${{ secrets.KEY_PASSWORD }}' >> gradle.properties
          echo androidStoreFile='key.jks' >> gradle.properties
          echo ${{ secrets.KEY_STORE }} | base64 --decode > key.jks
        fi

    - name: Checkout libxposed/api
      uses: actions/checkout@main
      with:
        repository: libxposed/api
        path: libxposed/api
        ref: 54582730315ba4a3d7cfaf9baf9d23c419e07006

    - name: Checkout core
      uses: actions/checkout@main
      with:
        repository: JingMatrix/LSPosed
        path: core
        submodules: 'recursive'
        ref: c093f23244087999517f5330e8844d79cc3d5513

    - name: Checkout libxposed/service
      uses: actions/checkout@main
      with:
        repository: libxposed/service
        path: libxposed/service
        ref: 496b76fa3e5af87958ebef97bd160319e05da79b

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        gradle-home-cache-cleanup: true

    - name: Setup ninja
      uses: seanmiddleditch/gha-setup-ninja@master
      with:
        version: 1.12.0

    - name: Remove Android's cmake
      shell: bash
      run: rm -rf $ANDROID_HOME/cmake

    - name: Build dependencies with Gradle
      working-directory: libxposed
      run: |
        cd api
        echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
        ./gradlew :api:publishApiPublicationToMavenLocal
        cd ../service
        echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
        ./gradlew :interface:publishInterfacePublicationToMavenLocal

    - name: Set short commit id
      run: echo "commit=$(echo ${{ github.sha }} | cut -c-7)" > $GITHUB_ENV

    - name: Build core with Gradle
      run: |
        {
          echo 'org.gradle.parallel=true'
          echo 'org.gradle.jvmargs=-Xmx2048m'
          echo 'android.native.buildOutput=verbose'
        } >> gradle.properties
        ./gradlew buildAll

    - name: Upload Debug artifact
      uses: actions/upload-artifact@v4
      with:
        name: lspatch-debug-${{ env.commit }}
        path: out/debug/*

    - name: Upload Release artifact
      uses: actions/upload-artifact@v4
      with:
        name: lspatch-release-${{ env.commit }}
        path: out/release/*

    - name: Upload mappings
      uses: actions/upload-artifact@v4
      with:
        name: mappings-${{ env.commit }}
        path: |
          patch-loader/build/outputs/mapping
          manager/build/outputs/mapping

    - name: Upload symbols
      uses: actions/upload-artifact@v4
      with:
        name: symbols-${{ env.commit }}
        path: |
          patch-loader/build/symbols
